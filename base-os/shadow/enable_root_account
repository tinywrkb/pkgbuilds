#!/bin/bash

# man crypt.5

# TODO: add --root option for setting this from the live media
# TODO: add support to changing root password (already mounted)
# TODO: allow to change password, be tolerant for exiting values
# TODO: pwck is not good to depend on, exits with an error if some old users homes not exist in the fs

[ "$EUID" -eq 0 ] || { echo "$0 need to run as root!"; exit 1; }

now=$(date +%s)
today=$(($now/(3600*24)))

unset pw

echo 'Enabling root account access...'
echo
echo 'Please choose a password...'

# see alternatives @
#  https://unix.stackexchange.com/questions/81240/manually-generate-password-for-etc-shadow
pw=$(openssl passwd -6)

while [ -z "$pw" ] || [ "$pw" = '<NULL>' ]; do
  echo
  echo 'Please try again choosing a password...'
  pw=$(openssl passwd -6)
done

cp /usr/etc/shadow /var/etc/shadow.tmp

if [ $today -gt 14871 ]; then
  sed -i 's#^\(root:\)\*\(:[[:digit:]]*:\{6\}\)#\1'"$pw"':'"$today"'::::::#' \
    /var/etc/shadow.tmp
else
  sed -i 's#^\(root:\)\*\(:[[:digit:]]*:\{6\}\)#\1'"$pw"'\2#' \
    /var/etc/shadow.tmp
fi
# test if shadow.tmp has the passwd updated, if so then
diff /usr/etc/shadow /var/etc/shadow.tmp &>/dev/null
if [ $? -eq 1 ]; then
  # shadow.tmp was updated, now check if valid
  # TODO: better password testing?
  pwck -r /usr/etc/passwd /var/etc/shadow.tmp
  if [ $? -eq 0 ]; then
    mv /var/etc/shadow.tmp /var/etc/shadow
    # TODO: use instead the systemd mount service?
    mount --bind /var/etc/shadow /usr/etc/shadow
    echo 'Access to root account was enabled'
    exit 0
  fi
fi

rm /var/etc/shadow.tmp
echo 'Failed to enable access to root account'
exit 1
