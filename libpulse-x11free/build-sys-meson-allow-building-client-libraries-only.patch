From b4fae79dd3853808481057f0849f5fa22da909c7 Mon Sep 17 00:00:00 2001
From: "Igor V. Kovalenko" <igor.v.kovalenko@gmail.com>
Date: Sun, 18 Apr 2021 13:13:52 +0300
Subject: [PATCH] build-sys: meson: allow building client libraries only

---
 man/meson.build                   |  23 ++-
 meson.build                       |   2 +
 meson_options.txt                 |   3 +
 shell-completion/bash/meson.build |  13 +-
 src/meson.build                   |   8 +-
 src/tests/meson.build             | 287 ++++++++++++++++--------------
 src/utils/meson.build             |  58 +++---
 7 files changed, 219 insertions(+), 175 deletions(-)

diff --git a/man/meson.build b/man/meson.build
index 104384459..3f79890f9 100644
--- a/man/meson.build
+++ b/man/meson.build
@@ -1,18 +1,25 @@
 
 # man page name, section, [aliases]
-manpages = [
-  ['default.pa', '5'],
+manpages = []
+
+if get_option('daemon')
+  manpages += [
+    ['default.pa', '5'],
+    ['pacmd', '1'],
+    ['pasuspender', '1'],
+    ['pulse-cli-syntax', '5'],
+    ['pulse-daemon.conf', '5'],
+    ['pulseaudio', '1'],
+    ['start-pulseaudio-x11', '1'],
+  ]
+endif
+
+manpages += [
   ['pacat', '1', ['paplay', 'parec', 'parecord', 'pamon']],
-  ['pacmd', '1'],
   ['pactl', '1'],
   ['padsp', '1'],
-  ['pasuspender', '1'],
   ['pax11publish', '1'],
-  ['pulse-cli-syntax', '5'],
   ['pulse-client.conf', '5'],
-  ['pulse-daemon.conf', '5'],
-  ['pulseaudio', '1'],
-  ['start-pulseaudio-x11', '1'],
 ]
 
 # FIXME: Add esdcompat if HAVE_ESOUND
diff --git a/meson.build b/meson.build
index fd146a7e7..9fbdda1ee 100644
--- a/meson.build
+++ b/meson.build
@@ -881,6 +881,8 @@ summary = [
 #  'CFLAGS:                        @0@'.format(${CFLAGS}),
 #  'CPPFLAGS:                      @0@'.format(${CPPFLAGS}),
 #  'LIBS:                          @0@'.format(${LIBS}),
+  '',
+  'Enable pulseaudio daemon:      @0@'.format(get_option('daemon')),
   '',
   'Enable memfd shared memory:    @0@'.format(cdata.has('HAVE_MEMFD')),
   'Enable X11:                    @0@'.format(x11_dep.found()),
diff --git a/meson_options.txt b/meson_options.txt
index e2d08becd..6be586452 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -1,3 +1,6 @@
+option('daemon',
+       type : 'boolean', value : true,
+       description : 'Enable building and installation of pulseaudio daemon and supporting configuration files')
 option('gcov',
        type : 'boolean', value : false,
        description : 'Enable optional gcov coverage analysis')
diff --git a/shell-completion/bash/meson.build b/shell-completion/bash/meson.build
index db4b00bcb..e9152eb2a 100644
--- a/shell-completion/bash/meson.build
+++ b/shell-completion/bash/meson.build
@@ -1,13 +1,20 @@
 if bashcompletiondir != 'no'
-  aliases = [
-    'pacat',
+  aliases = []
+
+  if get_option('daemon')
+  aliases += [
     'pacmd',
+    'pasuspender',
+  ]
+  endif
+
+  aliases += [
+    'pacat',
     'pactl',
     'padsp',
     'paplay',
     'parec',
     'parecord',
-    'pasuspender',
   ]
 
   install_data('pulseaudio', install_dir : bashcompletiondir)
diff --git a/src/meson.build b/src/meson.build
index af29db453..d8ecd8678 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -206,9 +206,11 @@ libpulsecommon = shared_library('pulsecommon-' + pa_version_major_minor,
 libpulsecommon_dep = declare_dependency(link_with: libpulsecommon)
 
 subdir('pulse')
-subdir('pulsecore')
-subdir('daemon')
-subdir('modules')
+if get_option('daemon')
+  subdir('pulsecore')
+  subdir('daemon')
+  subdir('modules')
+endif
 if get_option('tests')
   subdir('tests')
 endif
diff --git a/src/tests/meson.build b/src/tests/meson.build
index 1e550d5c7..a27509b21 100644
--- a/src/tests/meson.build
+++ b/src/tests/meson.build
@@ -7,85 +7,93 @@
 
 # Default tests
 
-default_tests = [
-  [ 'asyncmsgq-test', 'asyncmsgq-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'asyncq-test', 'asyncq-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+default_tests = []
+
+default_tests += [
   [ 'channelmap-test', 'channelmap-test.c',
     [ check_dep, libpulse_dep ] ],
-  [ 'close-test', 'close-test.c',
-    [            libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
   [ 'core-util-test', 'core-util-test.c',
     [ check_dep, libpulse_dep, libpulsecommon_dep ] ],
-  [ 'cpu-mix-test', [ 'cpu-mix-test.c', 'runtime-test-util.h' ],
-    [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'cpu-remap-test', [ 'cpu-remap-test.c', 'runtime-test-util.h' ],
-    [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'cpu-sconv-test', [ 'cpu-sconv-test.c', 'runtime-test-util.h' ],
-    [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'cpu-volume-test', [ 'cpu-volume-test.c', 'runtime-test-util.h' ],
-    [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'format-test', 'format-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
   [ 'get-binary-name-test', 'get-binary-name-test.c',
     [ check_dep, libpulse_dep, libpulsecommon_dep ] ],
   [ 'hashmap-test', 'hashmap-test.c',
     [ check_dep, libpulse_dep, libpulsecommon_dep ] ],
-  [ 'hook-list-test', 'hook-list-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
   [ 'json-test', 'json-test.c',
     [ check_dep, libpulse_dep, libpulsecommon_dep ] ],
-  [ 'lfe-filter-test', 'lfe-filter-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'lock-autospawn-test', 'lock-autospawn-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
   [ 'mainloop-test', 'mainloop-test.c',
     [ check_dep, libpulse_dep, libpulsecommon_dep ] ],
-  [ 'memblock-test', 'memblock-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'memblockq-test', 'memblockq-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'mix-test', 'mix-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'mult-s16-test', [ 'mult-s16-test.c', 'runtime-test-util.h' ],
-    [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'proplist-test', 'proplist-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'queue-test', 'queue-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'resampler-test', 'resampler-test.c',
-    [            libpulse_dep, libpulsecommon_dep, libpulsecore_dep, libintl_dep ] ],
-  [ 'rtpoll-test', 'rtpoll-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'smoother-test', 'smoother-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'strlist-test', 'strlist-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'thread-mainloop-test', 'thread-mainloop-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'thread-test', 'thread-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
   [ 'utf8-test', 'utf8-test.c',
     [ check_dep, libpulse_dep, libpulsecommon_dep ] ],
   [ 'volume-test', 'volume-test.c',
     [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep ] ],
 ]
 
-if host_machine.system() != 'windows'
+if get_option('daemon')
   default_tests += [
-    [ 'sigbus-test', 'sigbus-test.c',
+    [ 'asyncmsgq-test', 'asyncmsgq-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'asyncq-test', 'asyncq-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'close-test', 'close-test.c',
+      [            libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'cpu-mix-test', [ 'cpu-mix-test.c', 'runtime-test-util.h' ],
+      [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'cpu-remap-test', [ 'cpu-remap-test.c', 'runtime-test-util.h' ],
+      [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'cpu-sconv-test', [ 'cpu-sconv-test.c', 'runtime-test-util.h' ],
+      [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'cpu-volume-test', [ 'cpu-volume-test.c', 'runtime-test-util.h' ],
+      [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'format-test', 'format-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'hook-list-test', 'hook-list-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'lfe-filter-test', 'lfe-filter-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'lock-autospawn-test', 'lock-autospawn-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'memblock-test', 'memblock-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'memblockq-test', 'memblockq-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'mix-test', 'mix-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'mult-s16-test', [ 'mult-s16-test.c', 'runtime-test-util.h' ],
+      [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'proplist-test', 'proplist-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'queue-test', 'queue-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'resampler-test', 'resampler-test.c',
+      [            libpulse_dep, libpulsecommon_dep, libpulsecore_dep, libintl_dep ] ],
+    [ 'rtpoll-test', 'rtpoll-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'smoother-test', 'smoother-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'strlist-test', 'strlist-test.c',
       [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-    [ 'usergroup-test', 'usergroup-test.c',
+    [ 'thread-mainloop-test', 'thread-mainloop-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'thread-test', 'thread-test.c',
       [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
   ]
-endif
 
-if host_machine.system() != 'darwin'
-  default_tests += [
-    [ 'once-test', 'once-test.c',
-      [ check_dep, thread_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep, libatomic_ops_dep ] ],
-  ]
+  if host_machine.system() != 'windows'
+    default_tests += [
+      [ 'sigbus-test', 'sigbus-test.c',
+        [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+      [ 'usergroup-test', 'usergroup-test.c',
+        [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    ]
+  endif
+
+  if host_machine.system() != 'darwin'
+    default_tests += [
+      [ 'once-test', 'once-test.c',
+        [ check_dep, thread_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep, libatomic_ops_dep ] ],
+    ]
+  endif
+
 endif
 
 if cc.has_header('sys/eventfd.h')
@@ -95,12 +103,14 @@ if cc.has_header('sys/eventfd.h')
   ]
 endif
 
-if alsa_dep.found()
-  default_tests += [
-    [ 'alsa-mixer-path-test', 'alsa-mixer-path-test.c',
-      [ alsa_dep, check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ],
-      libalsa_util ]
-  ]
+if get_option('daemon')
+  if alsa_dep.found()
+    default_tests += [
+      [ 'alsa-mixer-path-test', 'alsa-mixer-path-test.c',
+        [ alsa_dep, check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ],
+        libalsa_util ]
+    ]
+  endif
 endif
 
 if glib_dep.found()
@@ -112,52 +122,59 @@ if glib_dep.found()
 endif
 
 # No-run tests
+norun_tests = []
 
-norun_tests = [
-  [ 'flist-test', 'flist-test.c',
-    [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'ipacl-test', 'ipacl-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'lo-latency-test', [ 'lo-latency-test.c', 'lo-test-util.c', 'lo-test-util.h' ],
-    [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'mcalign-test', 'mcalign-test.c',
-    [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+norun_tests += [
   [ 'pacat-simple', 'pacat-simple.c',
     [ libpulse_dep, libpulse_simple_dep ] ],
   [ 'parec-simple', 'parec-simple.c',
     [ libpulse_dep, libpulse_simple_dep ] ],
-  [ 'remix-test', 'remix-test.c',
-    [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'rtstutter', 'rtstutter.c',
-    [ thread_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'sig2str-test', 'sig2str-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-  [ 'stripnul', 'stripnul.c',
-    [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
 ]
 
-# echo-cancel test is a bit tedious to handle
-echo_cancel_test_sources = []
-foreach s : module_echo_cancel_sources
-  echo_cancel_test_sources += '../modules/' + s
-endforeach
-echo_cancel_test_sources += module_echo_cancel_orc_sources
+if get_option('daemon')
+  norun_tests += [
+    [ 'flist-test', 'flist-test.c',
+      [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'ipacl-test', 'ipacl-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'lo-latency-test', [ 'lo-latency-test.c', 'lo-test-util.c', 'lo-test-util.h' ],
+      [ check_dep, libm_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'mcalign-test', 'mcalign-test.c',
+      [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'remix-test', 'remix-test.c',
+      [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'rtstutter', 'rtstutter.c',
+      [ thread_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'sig2str-test', 'sig2str-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+    [ 'stripnul', 'stripnul.c',
+      [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+  ]
 
-norun_tests += [
-  [ 'echo-cancel-test', echo_cancel_test_sources,
-    module_echo_cancel_deps + [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep, libintl_dep ],
-    module_echo_cancel_libs,
-    module_echo_cancel_flags + server_c_args + [ '-DPA_MODULE_NAME=module_echo_cancel', '-DECHO_CANCEL_TEST=1' ] ]
-]
+  # echo-cancel test is a bit tedious to handle
+  echo_cancel_test_sources = []
+  foreach s : module_echo_cancel_sources
+    echo_cancel_test_sources += '../modules/' + s
+  endforeach
+  echo_cancel_test_sources += module_echo_cancel_orc_sources
 
-if cc.has_header_symbol('signal.h', 'SIGXCPU')
   norun_tests += [
-    [ 'cpulimit-test', [ 'cpulimit-test.c', '../daemon/cpulimit.c', '../daemon/cpulimit.h' ],
-      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-    [ 'cpulimit-test2', [ 'cpulimit-test.c', '../daemon/cpulimit.c', '../daemon/cpulimit.h' ],
-      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ],
-      [], ['-DTEST2'] ],
+    [ 'echo-cancel-test', echo_cancel_test_sources,
+      module_echo_cancel_deps + [ libpulse_dep, libpulsecommon_dep, libpulsecore_dep, libintl_dep ],
+      module_echo_cancel_libs,
+      module_echo_cancel_flags + server_c_args + [ '-DPA_MODULE_NAME=module_echo_cancel', '-DECHO_CANCEL_TEST=1' ] ]
   ]
+
+  if cc.has_header_symbol('signal.h', 'SIGXCPU')
+    norun_tests += [
+      [ 'cpulimit-test', [ 'cpulimit-test.c', '../daemon/cpulimit.c', '../daemon/cpulimit.h' ],
+        [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+      [ 'cpulimit-test2', [ 'cpulimit-test.c', '../daemon/cpulimit.c', '../daemon/cpulimit.h' ],
+        [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ],
+        [], ['-DTEST2'] ],
+    ]
+  endif
+
 endif
 
 if cc.has_function('pthread_setaffinity_np', dependencies : thread_dep)
@@ -207,47 +224,51 @@ foreach t : default_tests + norun_tests
   endif
 endforeach
 
-# These tests need a running pulseaudio daemon
+if get_option('daemon')
 
-daemon_tests = [
-  [ 'extended-test', 'extended-test.c',
-    [ check_dep, libm_dep, libpulse_dep ] ],
-  [ 'sync-playback', 'sync-playback.c',
-    [ check_dep, libm_dep, libpulse_dep ] ],
-]
+  # These tests need a running pulseaudio daemon
 
-daemon_tests_long = [
-  [ 'connect-stress', 'connect-stress.c',
-    [ check_dep, libpulse_dep ] ],
-  [ 'interpol-test', 'interpol-test.c',
-    [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
-]
+  daemon_tests = [
+    [ 'extended-test', 'extended-test.c',
+      [ check_dep, libm_dep, libpulse_dep ] ],
+    [ 'sync-playback', 'sync-playback.c',
+      [ check_dep, libm_dep, libpulse_dep ] ],
+  ]
 
-daemon_test_names = []
-daemon_test_long_names = []
+  daemon_tests_long = [
+    [ 'connect-stress', 'connect-stress.c',
+      [ check_dep, libpulse_dep ] ],
+    [ 'interpol-test', 'interpol-test.c',
+      [ check_dep, libpulse_dep, libpulsecommon_dep, libpulsecore_dep ] ],
+  ]
 
-foreach t : daemon_tests + daemon_tests_long
-  name = t[0]
-  sources = t[1]
-  deps = t[2]
+  daemon_test_names = []
+  daemon_test_long_names = []
 
-  if daemon_tests.contains(t)
-    daemon_test_names += name
-  else
-    daemon_test_long_names += name
-  endif
+  foreach t : daemon_tests + daemon_tests_long
+    name = t[0]
+    sources = t[1]
+    deps = t[2]
 
-  executable(name, sources,
-    c_args : pa_c_args,
-    include_directories : [ configinc, topinc ],
-    dependencies : deps,
+    if daemon_tests.contains(t)
+      daemon_test_names += name
+    else
+      daemon_test_long_names += name
+    endif
+
+    executable(name, sources,
+      c_args : pa_c_args,
+      include_directories : [ configinc, topinc ],
+      dependencies : deps,
+    )
+  endforeach
+
+  test_daemon_meson_sh = find_program('test-daemon.meson.sh')
+  run_target('test-daemon',
+    command : [ test_daemon_meson_sh ] + daemon_test_names
+  )
+  run_target('test-daemon-long',
+    command : [ test_daemon_meson_sh ] + daemon_test_long_names
   )
-endforeach
 
-test_daemon_meson_sh = find_program('test-daemon.meson.sh')
-run_target('test-daemon',
-  command : [ test_daemon_meson_sh ] + daemon_test_names
-)
-run_target('test-daemon-long',
-  command : [ test_daemon_meson_sh ] + daemon_test_long_names
-)
+endif
diff --git a/src/utils/meson.build b/src/utils/meson.build
index f40eaff95..c9635fdb6 100644
--- a/src/utils/meson.build
+++ b/src/utils/meson.build
@@ -42,34 +42,36 @@ executable('pactl',
   c_args : pa_c_args,
 )
 
-if host_machine.system() != 'windows'
-  pasuspender_sources = [
-    'pasuspender.c',
-  ]
-
-  executable('pasuspender',
-    pasuspender_sources,
-    install: true,
-    install_rpath : privlibdir,
-    include_directories : [configinc, topinc],
-    link_with : [libpulsecommon, libpulse],
-    dependencies: [libintl_dep],
-    c_args : pa_c_args,
-  )
-
-  pacmd_sources = [
-    'pacmd.c',
-  ]
-
-  executable('pacmd',
-    pacmd_sources,
-    install: true,
-    install_rpath : privlibdir,
-    include_directories : [configinc, topinc],
-    link_with : [libpulsecommon, libpulse],
-    dependencies: [libintl_dep],
-    c_args : pa_c_args,
-  )
+if get_option('daemon')
+  if host_machine.system() != 'windows'
+    pasuspender_sources = [
+      'pasuspender.c',
+    ]
+
+    executable('pasuspender',
+      pasuspender_sources,
+      install: true,
+      install_rpath : privlibdir,
+      include_directories : [configinc, topinc],
+      link_with : [libpulsecommon, libpulse],
+      dependencies: [libintl_dep],
+      c_args : pa_c_args,
+    )
+
+    pacmd_sources = [
+      'pacmd.c',
+    ]
+
+    executable('pacmd',
+      pacmd_sources,
+      install: true,
+      install_rpath : privlibdir,
+      include_directories : [configinc, topinc],
+      link_with : [libpulsecommon, libpulse],
+      dependencies: [libintl_dep],
+      c_args : pa_c_args,
+    )
+  endif
 endif
 
 if x11_dep.found()
-- 
GitLab

