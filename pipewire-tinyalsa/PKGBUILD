# Maintainer: tinywrkb <tinywrkb@gmail.com>
# Contributor: Jan Alexander Steffens (heftig) <heftig@archlinux.org>
# Contributor: Jan de Groot <jgc@archlinux.org>

# WARNING: this doesn't build, pipewire depends on alsa-lib only api

_pkgbase=pipewire
_pkgpostfix=tinyalsa
pkgbase=$_pkgbase-$_pkgpostfix
pkgname=({pipewire,alsa-card-profiles,pipewire-docs,pipewire-media-session}-$_pkgpostfix
         {pipewire-alsa,pipewire-jack,pipewire-pulse,gst-plugin-pipewire}-$_pkgpostfix
         pipewire-zeroconf-$_pkgpostfix)
pkgver=0.3.32
pkgrel=1
epoch=1
pkgdesc="Low-latency audio/video router and processor"
url="https://pipewire.org"
license=(MIT)
arch=(x86_64)
makedepends=(git meson doxygen xmltoman valgrind libpulse tinyalsa libusb
             gst-plugins-base rtkit dbus sdl2 ncurses libsndfile bluez-libs sbc
             libldac libopenaptx libfdk-aac avahi webrtc-audio-processing)
checkdepends=(desktop-file-utils)
_commit=41ce3092756ab27106881f4246e54bf32ea5adbe  # tags/0.3.32
source=("git+https://gitlab.freedesktop.org/pipewire/pipewire.git#commit=$_commit")
sha256sums=('SKIP')

pkgver() {
  cd pipewire
  git describe --tags | sed 's/-/+/g'
}

prepare() {
  cd pipewire
  sed -i "s/dependency('alsa'/dependency('tinyalsa'/" meson.build
  sed -i 's/alsa_dep/tinyalsa_dep/g' \
    $(find ./ -name meson.build)
  sed -i 's/#include <alsa\//#include <tinyalsa\//' \
    $(find spa/plugins/alsa -name '*.h' -o -name '*.c')

  # TODO: enable alsa spa plugin
  sed -i '/if tinyalsa_dep.found/,/endif/d' spa/plugins/meson.build
}

build() {
  local meson_options=(
    -D bluez5-backend-hsphfpd=disabled
    -D bluez5-backend-ofono=disabled
    -D jack-devel=enabled
    -D libjack-path=/usr/lib
    # TODO: enable pipewire-alsa?
    -D pipewire-alsa=disabled
    -D docs=enabled
    -D jack=disabled
    -D libcamera=disabled
    -D udevrulesdir=/usr/lib/udev/rules.d
    -D roc=disabled
  )
  arch-meson pipewire build "${meson_options[@]}"
  meson compile -C build
}

check() {
  meson test -C build --print-errorlogs
}

_pick() {
  local p="$1" f d; shift
  for f; do
    d="$srcdir/$p/${f#$pkgdir/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done
}

_ver=${pkgver:0:3}

package_pipewire-tinyalsa() {
  license+=(LGPL)  # libspa-alsa
  depends=(rtkit alsa-card-profiles libdbus-1.so libncursesw.so libsndfile.so
           libudev.so libusb-1.0.so libasound.so libsystemd.so libbluetooth.so
           libsbc.so libldacBT_enc.so libopenaptx.so libfdk-aac.so
           libwebrtc_audio_processing.so)
  optdepends=('pipewire-docs-tinyalsa: Documentation'
              'pipewire-media-session-tinyalsa: Default session manager'
              'pipewire-alsa-tinyalsa: ALSA configuration'
              'pipewire-jack-tinyalsa: JACK support'
              'pipewire-pulse-tinyalsa: PulseAudio replacement'
              'gst-plugin-pipewire-tinyalsa: GStreamer support'
              'pipewire-zeroconf-tinyalsa: Zeroconf support')
  provides=(libpipewire-$_ver.so)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})
  install=pipewire.install

  meson install -C build --destdir "$pkgdir"

  ( cd "$pkgdir"

    # TODO: enable this after fixing alsa
    #_pick acp usr/lib/udev
    #_pick acp usr/share/alsa-card-profile

    _pick docs usr/share/doc

    _pick pms usr/bin/pipewire-media-session
    _pick pms usr/lib/systemd/user/pipewire-media-session.service
    _pick pms usr/share/pipewire/media-session.d/*.conf

    _pick jack usr/bin/pw-jack
    _pick jack usr/include/jack
    _pick jack usr/lib/libjack*
    _pick jack usr/lib/pkgconfig/jack.pc
    _pick jack usr/share/man/man1/pw-jack.1
    _pick jack usr/share/pipewire/{jack.conf,media-session.d/with-jack}

    _pick pulse usr/bin/pipewire-pulse
    _pick pulse usr/lib/pipewire-$_ver/libpipewire-module-protocol-pulse.so
    _pick pulse usr/lib/pipewire-$_ver/libpipewire-module-pulse-tunnel.so
    _pick pulse usr/lib/systemd/user/pipewire-pulse.*
    _pick pulse usr/share/pipewire/media-session.d/with-pulseaudio

    _pick gst usr/lib/gstreamer-1.0

    _pick zeroconf usr/lib/pipewire-$_ver/libpipewire-module-zeroconf-discover.so
  )

  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

package_alsa-card-profiles-tinyalsa() {
  pkgdesc+=" - ALSA card profiles"
  license=(LGPL)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})
  # TODO: enable this after fixing alsa
  #mv acp/* "$pkgdir"
}

package_pipewire-docs-tinyalsa() {
  pkgdesc+=" - documentation"
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})
  mv docs/* "$pkgdir"
  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

package_pipewire-media-session-tinyalsa() {
  pkgdesc+=" - Session manager"
  depends=(pipewire libpipewire-$_ver.so)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})
  install=pipewire-media-session.install
  mv pms/* "$pkgdir"
  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

package_pipewire-alsa-tinyalsa() {
  pkgdesc+=" - ALSA configuration"
  depends=(pipewire-media-session)
  provides=(pulseaudio-alsa)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})

  mkdir -p "$pkgdir/etc/alsa/conf.d"
  ln -st "$pkgdir/etc/alsa/conf.d" \
    /usr/share/alsa/alsa.conf.d/{50-pipewire,99-pipewire-default}.conf
  install -Dm644 /dev/null \
    "$pkgdir/usr/share/pipewire/media-session.d/with-alsa"

  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

package_pipewire-jack-tinyalsa() {
  pkgdesc+=" - JACK support"
  license+=(GPL2)  # libjackserver
  depends=(pipewire-media-session libpipewire-$_ver.so)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})
  # TODO: drop jack provides and conflicts, this is a workaround for bad packaging and
  #       a pacman annoyance, it should be avoided
  conflicts+=('jack')
  provides+=('jack' 'libjack.so=0-64' 'libjacknet.so=0-64' 'libjackserver.so=0-64')
  mv jack/* "$pkgdir"
  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

package_pipewire-pulse-tinyalsa() {
  pkgdesc+=" - PulseAudio replacement"
  depends=(pipewire-media-session libpipewire-$_ver.so libpulse.so
           libavahi-{client,common}.so)
  provides=(pulseaudio pulseaudio-bluetooth)
  conflicts=(pulseaudio pulseaudio-bluetooth)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})
  install=pipewire-pulse.install
  mv pulse/* "$pkgdir"
  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

package_gst-plugin-pipewire-tinyalsa() {
  pkgdesc="Multimedia graph framework - pipewire plugin"
  depends=(pipewire-media-session libpipewire-$_ver.so gst-plugins-base-libs)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})
  mv gst/* "$pkgdir"
  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

package_pipewire-zeroconf-tinyalsa() {
  pkgdesc+=" - Zeroconf support"
  depends=(pipewire libpipewire-$_ver.so libavahi-{client,common}.so)
  conflicts+=(${pkgname%-$_pkgpostfix})
  provides+=(${pkgname%-$_pkgpostfix})

  mv zeroconf/* "$pkgdir"

  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 pipewire/COPYING
}

# vim:set sw=2 et:
